[{"C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\index.js":"1","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\App.js":"2","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\Dashboard.js":"4","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\Groups.js":"5","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\Calendar.js":"6","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\Login.js":"7","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\Routing.js":"8","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\Profile.js":"9","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\Friends.js":"10","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\Registration.js":"11","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\firebase.js":"12","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\components\\Map.js":"13"},{"size":517,"mtime":1646715028613,"results":"14","hashOfConfig":"15"},{"size":2057,"mtime":1646715028602,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1646715028614,"results":"17","hashOfConfig":"15"},{"size":1768,"mtime":1646715028605,"results":"18","hashOfConfig":"15"},{"size":5033,"mtime":1646715028606,"results":"19","hashOfConfig":"15"},{"size":5358,"mtime":1646715028604,"results":"20","hashOfConfig":"15"},{"size":1753,"mtime":1646715028607,"results":"21","hashOfConfig":"15"},{"size":9108,"mtime":1646785642782,"results":"22","hashOfConfig":"15"},{"size":5153,"mtime":1646715028608,"results":"23","hashOfConfig":"15"},{"size":7449,"mtime":1646725298656,"results":"24","hashOfConfig":"15"},{"size":9529,"mtime":1646715028609,"results":"25","hashOfConfig":"15"},{"size":1492,"mtime":1646715028612,"results":"26","hashOfConfig":"15"},{"size":1448,"mtime":1646715028611,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"5965hx",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\index.js",[],["61","62"],"C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\App.js",[],"C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\Dashboard.js",["63","64","65"],"import React, { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"./Dashboard.css\";\r\nimport { auth, db, logout } from \"./firebase\";\r\nimport { query, collection, getDocs, where } from \"firebase/firestore\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction Dashboard() {\r\n  const [user, loading, error] = useAuthState(auth);\r\n  const [name, setName] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const fetchUserName = async () => {\r\n    try {\r\n      const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n      const doc = await getDocs(q);\r\n      const data = doc.docs[0].data();\r\n\r\n      setName(data.name);\r\n    } catch (err) {\r\n      console.error(err);\r\n      //alert(\"An error occured while fetching user data\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loading) return;\r\n    if (!user) return navigate(\"/\");\r\n\r\n    fetchUserName();\r\n  }, [user, loading]);\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <center>\r\n      <div className=\"content\">\r\n        <Card border=\"info\" className=\"d_titleCard\">\r\n          <Card.Header className=\"d_headerCard\">\r\n          <div className=\"d_titleText\"> Welcome, {name}. </div>\r\n          <div className=\"d_subtitle\"> {user?.email} </div>\r\n          </Card.Header>\r\n\r\n          <Card.Body className=\"d_  bodyCard\">\r\n              <Button variant=\"primary\" size=\"lg\" onClick={logout}>\r\n                Click to Logout\r\n              </Button>{' '}\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n      </center>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\Groups.js",[],"C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\Calendar.js",["66","67","68","69"],"import React from \"react\";\r\nimport \"./Calendar.css\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport TimeRange from 'react-time-range';\r\n\r\n\r\n\r\nfunction getScheduledMeetings() {\r\n  return (\r\n    <div>\r\n      <div className=\"cal_regtext\"> Upcoming meetings: </div>\r\n      <Accordion defaultActiveKey=\"3\">\r\n\r\n        <Accordion.Item eventKey=\"3\" className=\"upcoming\">\r\n          <Accordion.Header className=\"upcoming\">Mar 8 - Spring Break Road Trip</Accordion.Header>\r\n          <Accordion.Body>\r\n            Details: will be inserted/finalized shortly!\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n\r\n        <Accordion.Item eventKey=\"4\">\r\n          <Accordion.Header>Mar 16 - One Direction Concert</Accordion.Header>\r\n          <Accordion.Body>\r\n            Details: oh I wish this was a real thing...\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n\r\n      <div className=\"cal_regtext\"> Previous meetings: </div>\r\n      <Accordion>\r\n        <Accordion.Item eventKey=\"2\" className=\"past\">\r\n          <Accordion.Header>Feb 24 - Westwood Dinner</Accordion.Header>\r\n          <Accordion.Body>\r\n            The night it all went wrong. The last time we saw him...\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n        <Accordion.Item eventKey=\"1\" className=\"past\">\r\n          <Accordion.Header>Feb 2 - Cancun Vacation</Accordion.Header>\r\n          <Accordion.Body>\r\n            Best trip ever. White sand, beach-front hotel. Ukeleles...\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n        <Accordion.Item eventKey=\"0\" className=\"past\">\r\n          <Accordion.Header className=\"past\">Jan 12 - Big Sur Trip</Accordion.Header>\r\n          <Accordion.Body className=\"past\">\r\n            This is just filler for now. But Big Sur is amazing omfg.\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ChooseMeetingTImes() {\r\n  return(\r\n    <div>\r\n      <div className=\"cal_regtext\"> Available Days: </div>\r\n      <Accordion>\r\n        <Accordion.Item eventKey=\"3\">\r\n          <Accordion.Header>Mar 4</Accordion.Header>\r\n          <Accordion.Body>\r\n            <Row width=\"10vw\">\r\n              <Col sm={9}>\r\n                <TimeRange\r\n                    startMoment=\"8:00\"\r\n                    endMoment=\"9:00\"\r\n                    minuteIncrement=\"15\"\r\n                    onChange={React.returnFunction}\r\n                />\r\n              </Col>\r\n              <Col sm={2}>\r\n              <Button variant=\"success\">Schedule</Button>{' '}\r\n              </Col>\r\n            </Row>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n\r\n        <Accordion.Item eventKey=\"4\">\r\n          <Accordion.Header>Mar 8</Accordion.Header>\r\n          <Accordion.Body>\r\n          <Row width=\"10vw\">\r\n            <Col sm={9}>\r\n              <TimeRange\r\n                  startMoment=\"12:00\"\r\n                  endMoment=\"5:00\"\r\n                  minuteIncrement=\"15\"\r\n                  onChange={React.returnFunction}\r\n              />\r\n            </Col>\r\n            <Col sm={2}>\r\n            <Button variant=\"success\">Schedule</Button>{' '}\r\n            </Col>\r\n          </Row>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getCarousel(){\r\n  return(\r\n    <div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction miscStatistics() {\r\n  return (\r\n    <Row className=\"cal_row\" class=\"h-20\" >\r\n      <Col sm={2}>\r\n        <div className=\"cal_bottomtext\"> Memories & Metrics: </div>\r\n      </Col>\r\n      <Col sm={4}>\r\n      <ListGroup>\r\n        <ListGroup.Item>Total Hours Spent: 243</ListGroup.Item>\r\n        <ListGroup.Item>Average Hrs/Week: 2.64</ListGroup.Item>\r\n        <ListGroup.Item>Clique Ranking: 1205th</ListGroup.Item>\r\n      </ListGroup>\r\n      </Col>\r\n      <Col sm={2}>\r\n        <div className=\"cal_bottomtext\"> Surprising Statistics: </div>\r\n      </Col>\r\n      <Col sm={4}>\r\n      <ListGroup>\r\n        <ListGroup.Item>Always Busy: Garni</ListGroup.Item>\r\n        <ListGroup.Item>Always Free: Stephanie</ListGroup.Item>\r\n        <ListGroup.Item>Most Hyped: Selina</ListGroup.Item>\r\n      </ListGroup>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nfunction Calendar() {\r\n\r\n    return (\r\n        <div className=\"calendar\">\r\n\r\n          <Row>\r\n            <Col>\r\n              <Card border=\"info\" className=\"cal_widgetCard\">\r\n                  // Todo: Add Calendar widget here!\r\n              </Card>\r\n\r\n              <Card border=\"info\" className=\"cal_funCard\">\r\n                  {miscStatistics()}\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Card border=\"info\" className=\"cal_meetingCard scroll\">\r\n                  {getScheduledMeetings()}\r\n              </Card>\r\n\r\n              <Card border=\"info\" className=\"cal_scheduleCard\">\r\n                  {ChooseMeetingTImes()}\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calendar;","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\Login.js",["70","71","72","73","74","75","76","77","78","79"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { auth, logInWithEmailAndPassword, signInWithGoogle } from \"./firebase\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport \"./Login.css\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport GoogleButton from 'react-google-button'\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, loading, error] = useAuthState(auth);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      // maybe trigger a loading screen\r\n      return;\r\n    }\r\n    if (user) navigate(\"/profile\");\r\n  }, [user, loading]);\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <center>\r\n      <div className=\"content\">\r\n        <Card className=\"titleCard\">\r\n          <Card.Header className=\"headerCard\">\r\n          <div className=\"titleText\"> Clique. </div>\r\n          <div className=\"subtitle\"> Fancy slogan in the works... </div>\r\n          </Card.Header>\r\n\r\n          <Card.Body className=\"bodyCard\">\r\n            <GoogleButton\r\n              type=\"light\"\r\n              label='Sign in With Google'\r\n              size='100'\r\n              onClick={signInWithGoogle}\r\n            />\r\n\r\n            <div className=\"supportText\">\r\n              Don't have an account? &nbsp;\r\n              <a href=\"https://accounts.google.com/SignUp?hl=en\" target=\"_blank\">\r\n                  Register\r\n              </a> now.\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\Routing.js",[],"C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\Profile.js",["80","81","82","83"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Profile.css\";\r\n\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n// import \"./Dashboard.css\";\r\nimport { auth, db, logout } from \"./firebase\";\r\nimport { query, collection, getDocs, where } from \"firebase/firestore\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction Profile() {\r\n    const [user, loading, error] = useAuthState(auth);\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const navigate = useNavigate();\r\n  \r\n    const fetchUserName = async () => {\r\n      try {\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const data = doc.docs[0].data();\r\n  \r\n        setName(data.name);\r\n        setEmail(data.email);\r\n        setAddress(data.address);\r\n        setPhone(data.phone);\r\n      } catch (err) {\r\n        console.error(err);\r\n        // FIX: This alert message shows up regardless of successful fetch.\r\n        // alert(err.message);\r\n      }\r\n    };\r\n\r\n    useEffect(() => {    \r\n        /* ADD BACK IN -- PAGE RETURNS TO HOME PAGE IF NOT LOGGED IN\r\n        if (loading) return;\r\n        if (!user) return navigate(\"/\");\r\n        */\r\n        fetchUserName();\r\n      }, [user, loading]);\r\n\r\n    return (\r\n        <div className=\"myProfile\">\r\n            <div className=\"title\">{name}'s profile</div>\r\n            <div className=\"user-info\">\r\n                <div class=\"button-container\">\r\n                    <Button variant=\"primary\" size=\"md\" onClick={logout}>\r\n                        Click to Logout\r\n                    </Button>\r\n                </div>\r\n                <text>\r\n                    <h6>--- Some information about me ---</h6> <br />\r\n                    <span className=\"user-info-subtitle\">My email is:</span> {email}<br />\r\n                    <span className=\"user-info-subtitle\">My phone is:</span> {phone} <br />\r\n                    <span className=\"user-info-subtitle\">My address is:</span> {address}<br />\r\n                </text>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <div class=\"profileContainer\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-6 mb-4\">\r\n                        <Card classname=\"card\" display=\"flex\">\r\n                            <img class=\"card-img-top\" src=\"\" alt=\"\"/>\r\n                            <div class=\"profileText\">\r\n                                <h3>friends</h3>\r\n                                <p>see my list of friends and their information</p>\r\n                                <a href=\"../friends\" class=\"btn btn-outline-primary btn-sm\">\r\n                                    see friends\r\n                                </a>\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                    <div class=\"col-lg-6 mb-4\">\r\n                        <div class=\"card\" display=\"flex\">\r\n                            <img class=\"card-img-top\" src=\"\" alt=\"\"/>\r\n                            <div class=\"profileText\">\r\n                                <h3>groups</h3>\r\n                                <p>see my friend groups</p>\r\n                                <a href=\"../groups\" class=\"btn btn-outline-primary btn-sm\">\r\n                                    see friend groups\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-6 mb-4\">\r\n                        <div class=\"card\">\r\n                            <img class=\"card-img-top\" src=\"\" alt=\"\"/>\r\n                            <div class=\"profileText\" display=\"flex\">\r\n                                <h3>calendar</h3>\r\n                                <p>see upcoming planned and potential events</p>\r\n                                <a href=\"../calendar\" class=\"btn btn-outline-primary btn-sm\">\r\n                                    see calendar\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6 mb-4\">\r\n                        <div class=\"card\" display=\"flex\">\r\n                            <img class=\"card-img-top\" src=\"\" alt=\"\"/>\r\n                            <div class=\"profileText\">\r\n                                <h3>map</h3>\r\n                                <p>see routes for upcoming events</p>\r\n                                <a href=\"../routing\" class=\"btn btn-outline-primary btn-sm\">\r\n                                    see routes\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n             </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\Friends.js",["84","85","86","87","88"],"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport \"./Friends.css\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { db, auth } from \"./firebase\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { query, collection, getDocs, where, doc, updateDoc, arrayUnion, getDoc } from \"firebase/firestore\";\r\n\r\nlet friendlist = [];\r\n\r\nfunction EachFriend(id, n, em, phone, addr) {\r\n    var obj = {\r\n        id: id,\r\n        name: n,\r\n        email: em,\r\n        phone: phone,\r\n        address: addr\r\n    };\r\n    return obj;\r\n}\r\n\r\nfunction searchFriendPopup() {\r\n    const modal = document.getElementById(\"addfriendpopup\");\r\n    // const button = document.getElementById(\"addfriendbtn\");\r\n    const span = document.getElementsByClassName(\"close\")[0];\r\n    // button.onclick = function() {\r\n    //     modal.style.display = \"block\";\r\n    // }\r\n    modal.style.display = \"block\";\r\n\r\n    span.onclick = function() {\r\n        modal.style.display = \"none\";\r\n    }\r\n}\r\nfunction searchFriend() {\r\n    const input = document.getElementById(\"searchFriendInput\");\r\n    if (input){\r\n        const button = document.getElementById(\"searchfriendbtn\");\r\n        button.onclick = function() {searchFriendEmail()};\r\n    \r\n        const searchFriendEmail = async() => {\r\n            const auth = getAuth();\r\n            const user = auth.currentUser;\r\n            const filter = input.value.toLowerCase();\r\n            const currentUserQuery = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n            const getUserDoc = await getDocs(currentUserQuery);\r\n            try {\r\n                const q = query(collection(db, \"users\"), where(\"email\".toLowerCase(), \"==\", filter));\r\n                const querySnapshot = await getDocs(q);\r\n                const userData = getUserDoc.docs[0].data();\r\n                try {\r\n                    const friendToAdd = querySnapshot.docs[0].data();\r\n                    // TODO: (Not urgent) Add better UI for popup boxes instead of alerts and windows confirm\r\n                    if (user.uid == friendToAdd.uid) {\r\n                        alert(\"Cannot add yourself as a friend!\\nHave you got no friends? :(\");\r\n                    }\r\n                    else if (userData.friends.includes(friendToAdd.uid)) {\r\n                        alert(friendToAdd.name + \" is already in your friends list.\")\r\n                    }\r\n                    else {\r\n                        if (window.confirm(\"Add \" + friendToAdd.name + \" as a friend?\")) {\r\n                            const userDocId = getUserDoc.docs[0].id;\r\n                            addFriendToList(friendToAdd.uid, userDocId);\r\n                            alert(\"Successfully added \" + friendToAdd.name + \" as a friend!\");\r\n                            \r\n                            const queryFriend = query(collection(db, \"users\"), where(\"uid\", \"==\", friendToAdd.uid));\r\n                            const friendDoc = await getDocs(queryFriend);\r\n                            const friendData = friendDoc.docs[0].data();\r\n                            addToTable(friendData);\r\n                        }\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    alert(err.message + \"\\nUser with email \" + input.value + \" may not exist\");\r\n                }\r\n                \r\n            } catch (err) {\r\n                console.error(err);\r\n                alert(err.message);\r\n            }\r\n            input.value = \"\";\r\n        };\r\n    } \r\n}\r\nconst addFriendToList = async(uid, userDocId) => {\r\n    try {\r\n        const userDoc = doc(db, \"users\", userDocId);\r\n        await updateDoc(userDoc, {\r\n            friends: arrayUnion(uid)\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(\"Adding friend unsuccessful.\\n\" + err.message);\r\n    }\r\n}\r\n\r\nfunction deleteFriend(friend) {\r\n    // if (!e.target.classList.contains(\"deleteBtn\")) {\r\n    //     return;\r\n}\r\n\r\n// TODO: add remove friend feature\r\nfunction addToTable(friend) {\r\n    var table = document.getElementById(\"friendTable\");\r\n    const tbodyEl = document.querySelector(\"tbody\");\r\n    var x = table.rows.length-1;\r\n\r\n    tbodyEl.innerHTML += `<tr>\r\n    <td>${friend.name}</td>\r\n    <td>${friend.email}</td>\r\n    <td>${friend.phone}</td>\r\n    <td>${friend.address}</td>\r\n    </tr>\r\n    `;\r\n    // <td><button id = \"searchfriendbtn\" class = \"deleteBtn\"}>Remove Friend</button></td>\r\n}\r\n\r\nfunction Friends() {\r\n    const [friends, setFriends] = useState([]);\r\n    const [user, loading] = useAuthState(auth);\r\n    const fetchFriendData = async () => {\r\n      try {\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const data = doc.docs[0].data();\r\n        // friends contains an array of friend uids\r\n        setFriends(data.friends);\r\n        for (let i=0; i<friends.length; i++) {\r\n            const queryFriend = query(collection(db, \"users\"), where(\"uid\", \"==\", friends[i]));\r\n            const friendDoc = await getDocs(queryFriend);\r\n            const friendData = friendDoc.docs[0].data();\r\n            const currFriend =  new EachFriend(friends[i] ,friendData.name, friendData.email, friendData.phone,friendData.address);\r\n            if (!friendlist.includes(currFriend)) {\r\n                friendlist.push(currFriend);\r\n                var table = document.getElementById(\"friendTable\");\r\n                var x = table.rows.length-1;\r\n                if (friends.length > x) {\r\n                    addToTable(currFriend);\r\n                }\r\n            }\r\n        }\r\n        \r\n    } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    useEffect(() => {\r\n        if (loading) return;\r\n        fetchFriendData();\r\n    }, [user, loading])\r\n\r\n    return (\r\n        <center>\r\n        <div className=\"friends\">\r\n            {/* TODO: TEMPORARY SOLUTION to calling the table data\r\n            setting a setTimeout produces incorrect data to the table*/}\r\n            <button onClick={window.onload = function(){fetchFriendData()}}>Refresh friend List</button>\r\n            <div className=\"text\">\r\n                Friends\r\n            </div>\r\n            <Table striped bordered hover id=\"friendTable\">\r\n                <thead>\r\n                    <tr>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Address</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                </tbody>\r\n            </Table>\r\n            <button class=\"button\" id=\"addfriendbtn\" onClick={window.onload = function(){searchFriendPopup()}}> Add Friend </button>\r\n            <div id=\"addfriendpopup\" class=\"addfriend\">\r\n                <div class=\"addfriend-content\">\r\n                    <span class=\"close\">&times;</span>\r\n                    <input type=\"text\" id=\"searchFriendInput\" placeholder=\"Enter your friend's email address\"></input>\r\n                    {/* TODO: Should be \"send friend request button\" instead of adding friend right away */}\r\n                    <button class=\"addfriend-sendbutton\" id=\"searchfriendbtn\" onClick={window.onload = function(){searchFriend()}}>add to friends</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </center>\r\n    );\r\n}\r\n\r\nexport default Friends;","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\Registration.js",["89"],"import React, { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport \"./Registration.css\";\r\nimport { auth, db } from \"./firebase\";\r\nimport { query, collection, getDocs, setDoc, doc, where } from \"firebase/firestore\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\n// Component for alert\r\nfunction AlertError({show, setShow}) {\r\n    if (show) {\r\n      return (\r\n        <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n          <Alert.Heading className=\"alert-text\">Please fill out all the fields before submitting!</Alert.Heading>\r\n        </Alert>\r\n      );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n  \r\n// Component for registration\r\nfunction Registration () {\r\n\r\n    // Initialize states\r\n    const [user] = useAuthState(auth);\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [license, setLicense] = useState(\"\");\r\n    const [permit, setPermit] = useState(\"\");\r\n    const [car, setCar] = useState(\"\");\r\n    const [food, setFood] = useState(\"\");\r\n    const [place, setPlace] = useState(\"\");\r\n    const [song, setSong] = useState(\"\");\r\n    const [movie, setMovie] = useState(\"\");\r\n    const [book, setBook] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [show, setShow] = useState(true);\r\n  \r\n    // obtain information already in database - name and email\r\n    const fetchInfo = async () => {\r\n      try {\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const docwanted = await getDocs(q);\r\n        const data = docwanted.docs[0].data();\r\n  \r\n        setName(data.name);\r\n        setEmail(data.email);\r\n      } catch (err) {\r\n        console.error(err);\r\n        //alert(\"An error occured while fetching user data\");\r\n      }\r\n    };\r\n\r\n    // On submit\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // If any fields are un filled\r\n        if(!name || !license || !permit || !car || !food || !place || !song || !movie || !book || !phone) {\r\n            setIsValid(false);\r\n            setShow(true);\r\n        } else { // Set values in data base\r\n            setIsValid(true);\r\n            const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n            const docwanted = await getDocs(q);\r\n\r\n            await setDoc(doc(db, \"users\", docwanted.docs[0].id), {\r\n                uid: user.uid,\r\n                authProvider: \"google\",\r\n                email: email,\r\n                phone: phone,\r\n                name: name,\r\n                license: license,\r\n                permit: permit,\r\n                car: car,\r\n                food: food,\r\n                place: place,\r\n                song: song,\r\n                movie: movie,\r\n                book: book,\r\n                address: address\r\n            })\r\n            .then(() => {\r\n                window.location = '/profile';\r\n            })\r\n            .catch((error) => {\r\n                alert(error.message);\r\n            });\r\n        }\r\n      };\r\n\r\n      \r\n    // Obtain information\r\n    useEffect(() => {    \r\n        fetchInfo();\r\n      }, [user]);\r\n\r\n    \r\n    return (\r\n    <center>\r\n        <div className=\"profile\">\r\n            <div className=\"container\">\r\n            {isValid ? null : <AlertError show={show} setShow={setShow}/>}\r\n                <h1 className=\"title\">You are just one Clique away!</h1>\r\n                <h2 className=\"info-subtitle\">Please fill out some more information about yourself:</h2>\r\n                <hr></hr>\r\n\r\n                <Form className=\"info-form\" onSubmit={handleSubmit}>\r\n                    <h4 className=\"subtitle-reg\"> Personal Information </h4>\r\n                    <Form.Group className=\"mb-3 personal-item\" controlId=\"formBasicEmail\">\r\n                        <Form.Label className=\"personal-label\">Email: </Form.Label>\r\n                        <Form.Control type=\"email\" value={email} onChange={(e) => setName(e.target.value)} plaintext readOnly />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 personal-item\" controlId=\"forbasicName\">\r\n                        <Form.Label className=\"personal-label\">Preferred Name: </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter name\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 personal-item\" controlId=\"forbasicName\">\r\n                        <Form.Label className=\"personal-label\">Phone number: </Form.Label>\r\n                        <input id=\"validationDefault01\" class=\"form-control\" type=\"text\" placeholder=\"Enter phone number\" value={phone} onChange={(e) => setPhone(e.target.value)}></input>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 personal-item\" controlId=\"forAddress\">\r\n                        <Form.Label className=\"personal-label\">Address: </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter your address\" value={address} onChange={(e) => setAddress(e.target.value)}/>\r\n                    </Form.Group>\r\n\r\n                    <h4 className=\"subtitle-reg\"> Driving Capabilities </h4>\r\n                    <Form.Group className=\"mb-3 radiobtn-input\" controlId=\"forlicense\">\r\n                        <Form.Label>Do you have a license: </Form.Label>\r\n                        <div className=\"radiobtn-container\">\r\n                            <Form.Check className=\"radio-bubble\" inline label=\"yes\" name=\"license\" type=\"radio\" id={`inline-radio-1`} value=\"yes\" onChange={(e) => setLicense(e.target.value)}/>\r\n                            <Form.Check className=\"radio-bubble\" inline label=\"no\" name=\"license\" type=\"radio\" id={`inline-radio-2`} value=\"no\" onChange={(e) => setLicense(e.target.value)}/>\r\n                        </div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 radiobtn-input\" controlId=\"forPermit\">\r\n                        <Form.Label>Do you have a permit: </Form.Label>\r\n                        <div className=\"radiobtn-container\">\r\n                            <Form.Check className=\"radio-bubble\" inline label=\"yes\" name=\"Permit\" type=\"radio\" id={`inline-radio-1`} value=\"yes\" onChange={(e) => setPermit(e.target.value)}/>\r\n                            <Form.Check className=\"radio-bubble\" inline label=\"no\" name=\"Permit\" type=\"radio\" id={`inline-radio-2`} value=\"no\" onChange={(e) => setPermit(e.target.value)}/>\r\n                        </div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3 radiobtn-input\" controlId=\"forCar\">\r\n                        <Form.Label>Do you own / have access to a car: </Form.Label>\r\n                        <div className=\"radiobtn-container\">\r\n                            <Form.Check className=\"radio-bubble\" inline label=\"yes\" name=\"Car\" type=\"radio\" id={`inline-radio-1`} value=\"yes\" onChange={(e) => setCar(e.target.value)}/>\r\n                            <Form.Check className=\"radio-bubble\" inline label=\"no\" name=\"Car\" type=\"radio\" id={`inline-radio-2`} value=\"no\" onChange={(e) => setCar(e.target.value)}/>\r\n                        </div>\r\n                    </Form.Group>\r\n\r\n                    <h4 className=\"subtitle-reg\">What is your favorite:</h4>\r\n                    <Form.Group className=\"mb-3 favorite-item\" controlId=\"for\">\r\n                        <Form.Label className=\"favorite-label\">Food: </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter anything\" value={food} onChange={(e) => setFood(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3 favorite-item\" controlId=\"forbasicName\">\r\n                        <Form.Label className=\"favorite-label\">Place: </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter anything\" value={place} onChange={(e) => setPlace(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3 favorite-item\" controlId=\"forbasicName\">\r\n                        <Form.Label className=\"favorite-label\">Song: </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter anything\" value={song} onChange={(e) => setSong(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3 favorite-item\" controlId=\"forbasicName\">\r\n                        <Form.Label className=\"favorite-label\">Movie: </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter anything\" value={movie} onChange={(e) => setMovie(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3 favorite-item\" controlId=\"forbasicName\">\r\n                        <Form.Label className=\"favorite-label\">Book: </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter anything\" value={book} onChange={(e) => setBook(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\"> Submit </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    </center>\r\n    );\r\n}\r\n\r\nexport default Registration;\r\n","C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\firebase.js",[],"C:\\Users\\gghar\\OneDrive\\Desktop\\Clique\\Clique-make-routing-frontend\\Clique\\frontend\\src\\components\\Map.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":14},{"ruleId":"94","severity":1,"message":"98","line":13,"column":25,"nodeType":"96","messageId":"97","endLine":13,"endColumn":30},{"ruleId":"99","severity":1,"message":"100","line":35,"column":6,"nodeType":"101","endLine":35,"endColumn":21,"suggestions":"102"},{"ruleId":"94","severity":1,"message":"103","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":13},{"ruleId":"94","severity":1,"message":"104","line":11,"column":8,"nodeType":"96","messageId":"97","endLine":11,"endColumn":16},{"ruleId":"94","severity":1,"message":"105","line":112,"column":10,"nodeType":"96","messageId":"97","endLine":112,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":154,"column":62,"nodeType":"108","messageId":"109","endLine":156,"endColumn":15},{"ruleId":"94","severity":1,"message":"95","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":14},{"ruleId":"94","severity":1,"message":"110","line":3,"column":16,"nodeType":"96","messageId":"97","endLine":3,"endColumn":41},{"ruleId":"94","severity":1,"message":"111","line":8,"column":8,"nodeType":"96","messageId":"97","endLine":8,"endColumn":14},{"ruleId":"94","severity":1,"message":"112","line":14,"column":10,"nodeType":"96","messageId":"97","endLine":14,"endColumn":15},{"ruleId":"94","severity":1,"message":"113","line":14,"column":17,"nodeType":"96","messageId":"97","endLine":14,"endColumn":25},{"ruleId":"94","severity":1,"message":"114","line":15,"column":10,"nodeType":"96","messageId":"97","endLine":15,"endColumn":18},{"ruleId":"94","severity":1,"message":"115","line":15,"column":20,"nodeType":"96","messageId":"97","endLine":15,"endColumn":31},{"ruleId":"94","severity":1,"message":"98","line":16,"column":25,"nodeType":"96","messageId":"97","endLine":16,"endColumn":30},{"ruleId":"99","severity":1,"message":"116","line":25,"column":6,"nodeType":"101","endLine":25,"endColumn":21,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":47,"column":15,"nodeType":"120","messageId":"121","endLine":47,"endColumn":82,"fix":"122"},{"ruleId":"94","severity":1,"message":"95","line":5,"column":10,"nodeType":"96","messageId":"97","endLine":5,"endColumn":14},{"ruleId":"94","severity":1,"message":"98","line":15,"column":27,"nodeType":"96","messageId":"97","endLine":15,"endColumn":32},{"ruleId":"94","severity":1,"message":"123","line":20,"column":11,"nodeType":"96","messageId":"97","endLine":20,"endColumn":19},{"ruleId":"99","severity":1,"message":"124","line":45,"column":10,"nodeType":"101","endLine":45,"endColumn":25,"suggestions":"125"},{"ruleId":"94","severity":1,"message":"126","line":10,"column":73,"nodeType":"96","messageId":"97","endLine":10,"endColumn":79},{"ruleId":"127","severity":1,"message":"128","line":57,"column":34,"nodeType":"129","messageId":"130","endLine":57,"endColumn":36},{"ruleId":"94","severity":1,"message":"131","line":100,"column":10,"nodeType":"96","messageId":"97","endLine":100,"endColumn":22},{"ruleId":"94","severity":1,"message":"132","line":109,"column":9,"nodeType":"96","messageId":"97","endLine":109,"endColumn":10},{"ruleId":"99","severity":1,"message":"133","line":153,"column":8,"nodeType":"101","endLine":153,"endColumn":23,"suggestions":"134"},{"ruleId":"99","severity":1,"message":"135","line":102,"column":10,"nodeType":"101","endLine":102,"endColumn":16,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchUserName' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["139"],"'Table' is defined but never used.","'Carousel' is defined but never used.","'getCarousel' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","'logInWithEmailAndPassword' is defined but never used.","'Button' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["140"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"141","text":"142"},"'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserName'. Either include it or remove the dependency array.",["143"],"'getDoc' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'deleteFriend' is defined but never used.","'x' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchFriendData'. Either include it or remove the dependency array.",["144"],"React Hook useEffect has a missing dependency: 'fetchInfo'. Either include it or remove the dependency array.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},[1559,1559]," rel=\"noreferrer\"",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [user, loading, navigate, fetchUserName]",{"range":"156","text":"157"},"Update the dependencies array to be: [user, loading, navigate]",{"range":"158","text":"159"},"Update the dependencies array to be: [user, loading, fetchUserName]",{"range":"160","text":"161"},"Update the dependencies array to be: [user, loading, fetchFriendData]",{"range":"162","text":"163"},"Update the dependencies array to be: [fetchInfo, user]",{"range":"164","text":"165"},[1085,1100],"[user, loading, navigate, fetchUserName]",[810,825],"[user, loading, navigate]",[1529,1544],"[user, loading, fetchUserName]",[5853,5868],"[user, loading, fetchFriendData]",[3402,3408],"[fetchInfo, user]"]